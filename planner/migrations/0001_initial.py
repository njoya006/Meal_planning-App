# Generated by Django 5.2.1 on 2025-06-09 05:40

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('recipes', '0005_ingredient_calories_per_100g_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DietaryRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('include_ingredients', models.JSONField(blank=True, help_text='List of ingredient names to include', null=True)),
                ('exclude_ingredients', models.JSONField(blank=True, help_text='List of ingredient names to exclude', null=True)),
                ('min_ingredients', models.PositiveIntegerField(default=0, help_text='Minimum number of matching ingredients required')),
                ('max_ingredients', models.PositiveIntegerField(default=0, help_text='Maximum number of matching ingredients allowed (0 = no limit)')),
                ('priority', models.PositiveIntegerField(default=0, help_text='Higher priority rules are applied first.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, help_text="If set, this rule is user-specific; otherwise, it's global.", null=True, on_delete=django.db.models.deletion.CASCADE, related_name='custom_rules', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-priority', 'name'],
            },
        ),
        migrations.CreateModel(
            name='NutritionInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calories', models.FloatField()),
                ('protein', models.FloatField(help_text='Protein in grams')),
                ('fat', models.FloatField(help_text='Fat in grams')),
                ('carbs', models.FloatField(help_text='Carbohydrates in grams')),
                ('fiber', models.FloatField(default=0, help_text='Fiber in grams')),
                ('sugar', models.FloatField(default=0, help_text='Sugar in grams')),
                ('sodium', models.FloatField(default=0, help_text='Sodium in mg')),
                ('cholesterol', models.FloatField(default=0, help_text='Cholesterol in mg')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('recipe', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='nutrition_info', to='recipes.recipe')),
            ],
        ),
        migrations.CreateModel(
            name='MealPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('meal_type', models.CharField(choices=[('breakfast', 'Breakfast'), ('lunch', 'Lunch'), ('dinner', 'Dinner'), ('snack', 'Snack')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meal_plans', to='recipes.recipe')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meal_plans', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Meal Plan',
                'verbose_name_plural': 'Meal Plans',
                'unique_together': {('user', 'date', 'meal_type')},
            },
        ),
    ]
