# Generated by Django 5.2.1 on 2025-06-09 20:30

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('recipes', '0017_category_created_at_category_created_by_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterField(
            model_name='category',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created at'),
        ),
        migrations.AlterField(
            model_name='category',
            name='name',
            field=models.CharField(max_length=100, unique=True, verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='category',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, null=True, verbose_name='Updated at'),
        ),
        migrations.AlterField(
            model_name='cuisine',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created at'),
        ),
        migrations.AlterField(
            model_name='cuisine',
            name='name',
            field=models.CharField(max_length=100, unique=True, verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='cuisine',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, null=True, verbose_name='Updated at'),
        ),
        migrations.AlterField(
            model_name='ingredient',
            name='calories_per_100g',
            field=models.FloatField(default=0, help_text='Calories per 100g', verbose_name='Calories per 100g'),
        ),
        migrations.AlterField(
            model_name='ingredient',
            name='carbs_per_100g',
            field=models.FloatField(default=0, help_text='Carbs per 100g (g)', verbose_name='Carbs per 100g (g)'),
        ),
        migrations.AlterField(
            model_name='ingredient',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created at'),
        ),
        migrations.AlterField(
            model_name='ingredient',
            name='fat_per_100g',
            field=models.FloatField(default=0, help_text='Fat per 100g (g)', verbose_name='Fat per 100g (g)'),
        ),
        migrations.AlterField(
            model_name='ingredient',
            name='name',
            field=models.CharField(max_length=100, unique=True, verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='ingredient',
            name='protein_per_100g',
            field=models.FloatField(default=0, help_text='Protein per 100g (g)', verbose_name='Protein per 100g (g)'),
        ),
        migrations.AlterField(
            model_name='ingredient',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, null=True, verbose_name='Updated at'),
        ),
        migrations.AlterField(
            model_name='recipe',
            name='approved',
            field=models.BooleanField(default=False, verbose_name='Approved'),
        ),
        migrations.AlterField(
            model_name='recipe',
            name='contributor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipes', to=settings.AUTH_USER_MODEL, verbose_name='Contributor'),
        ),
        migrations.AlterField(
            model_name='recipe',
            name='cook_time',
            field=models.IntegerField(blank=True, help_text='Cook time in minutes', null=True, verbose_name='Cook time (minutes)'),
        ),
        migrations.AlterField(
            model_name='recipe',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Created at'),
        ),
        migrations.AlterField(
            model_name='recipe',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='User who originally created this recipe.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recipes_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AlterField(
            model_name='recipe',
            name='description',
            field=models.TextField(verbose_name='Description'),
        ),
        migrations.AlterField(
            model_name='recipe',
            name='difficulty',
            field=models.CharField(choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard')], default='easy', max_length=10, verbose_name='Difficulty'),
        ),
        migrations.AlterField(
            model_name='recipe',
            name='feedback',
            field=models.TextField(blank=True, null=True, verbose_name='Feedback'),
        ),
        migrations.AlterField(
            model_name='recipe',
            name='image',
            field=models.ImageField(blank=True, null=True, upload_to='recipes/images/', verbose_name='Image'),
        ),
        migrations.AlterField(
            model_name='recipe',
            name='instructions',
            field=models.TextField(verbose_name='Instructions'),
        ),
        migrations.AlterField(
            model_name='recipe',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Soft delete: uncheck to hide recipe without removing from DB', verbose_name='Is active'),
        ),
        migrations.AlterField(
            model_name='recipe',
            name='prep_time',
            field=models.IntegerField(blank=True, help_text='Preparation time in minutes', null=True, verbose_name='Preparation time (minutes)'),
        ),
        migrations.AlterField(
            model_name='recipe',
            name='servings',
            field=models.IntegerField(blank=True, null=True, verbose_name='Servings'),
        ),
        migrations.AlterField(
            model_name='recipe',
            name='slug',
            field=models.SlugField(blank=True, max_length=255, unique=True, verbose_name='Slug'),
        ),
        migrations.AlterField(
            model_name='recipe',
            name='source',
            field=models.CharField(blank=True, help_text='Recipe source or credit', max_length=255, verbose_name='Source/Credit'),
        ),
        migrations.AlterField(
            model_name='recipe',
            name='title',
            field=models.CharField(max_length=255, verbose_name='Title'),
        ),
        migrations.AlterField(
            model_name='recipe',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Updated at'),
        ),
        migrations.AlterField(
            model_name='recipe',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last updated this recipe.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recipes_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
        migrations.AlterField(
            model_name='tag',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created at'),
        ),
        migrations.AlterField(
            model_name='tag',
            name='name',
            field=models.CharField(max_length=50, unique=True, verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='tag',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, null=True, verbose_name='Updated at'),
        ),
    ]
